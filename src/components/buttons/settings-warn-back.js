const { MessageFlags } = require('discord.js');

module.exports = {
  customId: 'settings:warn-back',
  
  async execute(interaction, _args, client) {
    // Get the base container (dropdown menu)
    const SELECT_ID = 'settings:select';
    const OPTION_WARN = 'warn';
    const REFRESH_BUTTON_ID = 'settings:refresh';
    
    const { 
      StringSelectMenuBuilder,
      StringSelectMenuOptionBuilder,
      ButtonBuilder,
      ContainerBuilder,
      ButtonStyle
    } = require('discord.js');

    const baseContainer = new ContainerBuilder()
      .addActionRowComponents(row => row.setComponents(
        new StringSelectMenuBuilder()
          .setCustomId(SELECT_ID)
          .setPlaceholder('üõ†Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –Ω–∞—Å—Ç—Ä–æ–µ–∫')
          .addOptions(
            new StringSelectMenuOptionBuilder()
              .setLabel('‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è')
              .setValue(OPTION_WARN)
              .setDescription('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π'),
            new StringSelectMenuOptionBuilder()
              .setLabel('üîá –ú—É—Ç')
              .setValue('mute')
              .setDescription('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã –º—É—Ç–æ–≤'),
            new StringSelectMenuOptionBuilder()
              .setLabel('üí∞ –≠–∫–æ–Ω–æ–º–∏–∫–∞')
              .setValue('economy')
              .setDescription('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–π —Å–∏—Å—Ç–µ–º—ã'),
            new StringSelectMenuOptionBuilder()
              .setLabel('‚öôÔ∏è –û–±—â–∏–µ')
              .setValue('general')
              .setDescription('–û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞')
          )
      ))
      .addActionRowComponents(row => row.setComponents(
        new ButtonBuilder()
          .setStyle(ButtonStyle.Secondary)
          .setLabel('üîÑ –û–±–Ω–æ–≤–∏—Ç—å')
          .setCustomId(REFRESH_BUTTON_ID)
      ));

    // Get warn containers
    const guildId = interaction.guildId;
    const cfg = await client.prisma.warnConfig.findUnique({ where: { guildId } }).catch(() => null);
    const isEnabled = cfg?.enabled !== false;

    const { SectionBuilder, TextDisplayBuilder } = require('discord.js');

    const warnPageContainer = new ContainerBuilder()
      .addSectionComponents(
        new SectionBuilder()
          .setButtonAccessory(
            new ButtonBuilder()
              .setStyle(isEnabled ? ButtonStyle.Success : ButtonStyle.Danger)
              .setLabel(isEnabled ? 'Enabled' : 'Disabled')
              .setCustomId('settings:toggle-warn-from:warn')
          )
          .addTextDisplayComponents(
            new TextDisplayBuilder().setContent('> ### Warn')
          )
      )
      .addSectionComponents(
        new SectionBuilder()
          .setButtonAccessory(
            new ButtonBuilder()
              .setStyle(ButtonStyle.Secondary)
              .setLabel('‚öôÔ∏è')
              .setCustomId('settings:warn-config')
          )
          .addTextDisplayComponents(
            new TextDisplayBuilder().setContent(
              '> ### –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è\n' +
              '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π'
            )
          )
      )
      .addSectionComponents(
        new SectionBuilder()
          .setButtonAccessory(
            new ButtonBuilder()
              .setStyle(ButtonStyle.Secondary)
              .setLabel('‚öôÔ∏è')
              .setCustomId('settings:punishment-config')
          )
          .addTextDisplayComponents(
            new TextDisplayBuilder().setContent(
              '> ### –ù–∞–∫–∞–∑–∞–Ω–∏—è\n' +
              '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞–∫–∞–∑–∞–Ω–∏–π –∑–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è.'
            )
          )
      )
      // ... rest of warn configuration sections with statistics and buttons
      ;

    // Return to the main warn settings page
    await interaction.update({
      components: [baseContainer, warnPageContainer],
      flags: MessageFlags.IsComponentsV2
    });
  }
};