const { 
  MessageFlags, 
  ButtonStyle, 
  ButtonBuilder,
  ActionRowBuilder,
  StringSelectMenuBuilder,
  StringSelectMenuOptionBuilder,
  ContainerBuilder,
  SectionBuilder,
  TextDisplayBuilder
} = require('discord.js');

module.exports = {
  customId: 'settings:warn-edit-level',
  
  async execute(interaction, args, client) {
    const reasonId = args[0];
    
    if (!reasonId) {
      return interaction.reply({
        content: '‚ùå –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å ID –ø—Ä–∞–≤–∏–ª–∞.',
        flags: MessageFlags.Ephemeral
      });
    }

    const guildId = interaction.guildId;
    
    // Get current warn reason from database
    const warnReason = await client.prisma.warnReason.findUnique({
      where: { 
        id: parseInt(reasonId),
        guildId: guildId 
      }
    }).catch(() => null);

    if (!warnReason) {
      return interaction.reply({
        content: '‚ùå –û—à–∏–±–∫–∞: –ø—Ä–∞–≤–∏–ª–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.',
        flags: MessageFlags.Ephemeral
      });
    }

    const currentLevel = warnReason.severityLevel || 1;

    // Build severity level selection interface
    const levelContainer = new ContainerBuilder()
      .addActionRowComponents(
        new ActionRowBuilder()
          .addComponents(
            new ButtonBuilder()
              .setStyle(ButtonStyle.Secondary)
              .setLabel("‚Üê –ù–∞–∑–∞–¥")
              .setCustomId(`settings:warn-edit-rule-${reasonId}`)
          )
      )
      .addSectionComponents(
        new SectionBuilder()
          .setButtonAccessory(
            new ButtonBuilder()
              .setStyle(ButtonStyle.Primary)
              .setLabel("‚ö†Ô∏è")
              .setCustomId('settings:severity-level-info')
              .setDisabled(true)
          )
          .addTextDisplayComponents(
            new TextDisplayBuilder().setContent(
              `> ### –£—Ä–æ–≤–µ–Ω—å –Ω–∞–∫–∞–∑–∞–Ω–∏—è –¥–ª—è "${warnReason.label}"
` +
              `> –¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å: **${currentLevel}**
` +
              `> –¢–∏–ø –Ω–∞–∫–∞–∑–∞–Ω–∏—è: **${warnReason.punishmentType || 'None'}**
` +
              `> 
` +
              `> –í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Å–µ—Ä—å—ë–∑–Ω–æ—Å—Ç–∏ –Ω–∞—Ä—É—à–µ–Ω–∏—è:`
            )
          )
      )
      .addActionRowComponents(
        new ActionRowBuilder()
          .addComponents(
            new StringSelectMenuBuilder()
              .setCustomId(`settings:severity-level-select-${reasonId}`)
              .setPlaceholder('–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Å–µ—Ä—å—ë–∑–Ω–æ—Å—Ç–∏')
              .addOptions(
                new StringSelectMenuOptionBuilder()
                  .setLabel('üü¢ –£—Ä–æ–≤–µ–Ω—å 1 - –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ')
                  .setValue('1')
                  .setDescription('–õ—ë–≥–∫–æ–µ –Ω–∞—Ä—É—à–µ–Ω–∏–µ, –ø–µ—Ä–≤–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ')
                  .setDefault(currentLevel === 1),
                new StringSelectMenuOptionBuilder()
                  .setLabel('üü° –£—Ä–æ–≤–µ–Ω—å 2 - –°—Ä–µ–¥–Ω–µ–µ')
                  .setValue('2')
                  .setDescription('–£–º–µ—Ä–µ–Ω–Ω–æ–µ –Ω–∞—Ä—É—à–µ–Ω–∏–µ, –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å –Ω–∞–∫–∞–∑–∞–Ω–∏—è')
                  .setDefault(currentLevel === 2),
                new StringSelectMenuOptionBuilder()
                  .setLabel('üî¥ –£—Ä–æ–≤–µ–Ω—å 3 - –í—ã—Å–æ–∫–æ–µ')
                  .setValue('3')
                  .setDescription('–°–µ—Ä—å—ë–∑–Ω–æ–µ –Ω–∞—Ä—É—à–µ–Ω–∏–µ, —Ç—Ä–µ–±—É–µ—Ç –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è')
                  .setDefault(currentLevel === 3),
                new StringSelectMenuOptionBuilder()
                  .setLabel('‚ö´ –£—Ä–æ–≤–µ–Ω—å 4 - –ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ')
                  .setValue('4')
                  .setDescription('–ö—Ä–∞–π–Ω–µ —Å–µ—Ä—å—ë–∑–Ω–æ–µ –Ω–∞—Ä—É—à–µ–Ω–∏–µ, –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ')
                  .setDefault(currentLevel === 4),
                new StringSelectMenuOptionBuilder()
                  .setLabel('üî• –£—Ä–æ–≤–µ–Ω—å 5 - –≠–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω–æ–µ')
                  .setValue('5')
                  .setDescription('–ù–µ–¥–æ–ø—É—Å—Ç–∏–º–æ–µ –Ω–∞—Ä—É—à–µ–Ω–∏–µ, –º–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –±–∞–Ω')
                  .setDefault(currentLevel === 5)
              )
          )
      );

    // Update the interaction with severity level selection
    await interaction.update({
      components: [levelContainer],
      flags: MessageFlags.IsComponentsV2
    });
  }
};